0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.1.59
3 info using node@v0.8.2
4 verbose publish [ '.' ]
5 verbose read json /home/merc/Synced/Development/Bookings/libs/server/node_modules/resthttperrors/package.json
6 verbose cache add [ '.', null ]
7 silly cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { pathname: '.', path: '.', href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /home/merc/.npm/3a52ce78-.lock
11 verbose read json package.json
12 verbose tar pack [ '/home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/tmp.tgz',
12 verbose tar pack   '.' ]
13 verbose tarball /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/tmp.tgz
14 verbose folder .
15 info prepublish resthttperrors@0.0.2
16 silly lockFile c286d25f-39379-0-9163852417841554-tmp-tgz /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/tmp.tgz
17 verbose lock /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/tmp.tgz /home/merc/.npm/c286d25f-39379-0-9163852417841554-tmp-tgz.lock
18 silly lockFile c286d25f-39379-0-9163852417841554-tmp-tgz /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/tmp.tgz
19 verbose tar unpack /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/tmp.tgz
20 silly lockFile 4f41fae4-39379-0-9163852417841554-package /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/package
21 verbose lock /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/package /home/merc/.npm/4f41fae4-39379-0-9163852417841554-package.lock
22 silly gunzTarPerm modes [ '777', '666' ]
23 silly gunzTarPerm extractEntry package.json
24 silly gunzTarPerm modified mode [ 'package.json', 436, 438 ]
25 silly gunzTarPerm extractEntry README.md
26 silly gunzTarPerm modified mode [ 'README.md', 436, 438 ]
27 silly gunzTarPerm extractEntry HTTPErrors.js
28 silly gunzTarPerm modified mode [ 'HTTPErrors.js', 436, 438 ]
29 verbose read json /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/package/package.json
30 silly lockFile 4f41fae4-39379-0-9163852417841554-package /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/package
31 verbose from cache /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/package/package.json
32 verbose tar pack [ '/home/merc/.npm/resthttperrors/0.0.2/package.tgz',
32 verbose tar pack   '/home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/package' ]
33 verbose tarball /home/merc/.npm/resthttperrors/0.0.2/package.tgz
34 verbose folder /home/merc/tmp/npm-10134/1361854639379-0.9163852417841554/package
35 silly lockFile f3a71fcc-resthttperrors-0-0-2-package-tgz /home/merc/.npm/resthttperrors/0.0.2/package.tgz
36 verbose lock /home/merc/.npm/resthttperrors/0.0.2/package.tgz /home/merc/.npm/f3a71fcc-resthttperrors-0-0-2-package-tgz.lock
37 silly lockFile f3a71fcc-resthttperrors-0-0-2-package-tgz /home/merc/.npm/resthttperrors/0.0.2/package.tgz
38 silly lockFile 91841d0c-npm-resthttperrors-0-0-2-package /home/merc/.npm/resthttperrors/0.0.2/package
39 verbose lock /home/merc/.npm/resthttperrors/0.0.2/package /home/merc/.npm/91841d0c-npm-resthttperrors-0-0-2-package.lock
40 silly lockFile 91841d0c-npm-resthttperrors-0-0-2-package /home/merc/.npm/resthttperrors/0.0.2/package
41 verbose tar unpack /home/merc/.npm/resthttperrors/0.0.2/package.tgz
42 silly lockFile 91841d0c-npm-resthttperrors-0-0-2-package /home/merc/.npm/resthttperrors/0.0.2/package
43 verbose lock /home/merc/.npm/resthttperrors/0.0.2/package /home/merc/.npm/91841d0c-npm-resthttperrors-0-0-2-package.lock
44 silly gunzTarPerm modes [ '777', '666' ]
45 silly gunzTarPerm extractEntry package.json
46 silly gunzTarPerm extractEntry README.md
47 silly gunzTarPerm extractEntry HTTPErrors.js
48 verbose read json /home/merc/.npm/resthttperrors/0.0.2/package/package.json
49 silly lockFile 91841d0c-npm-resthttperrors-0-0-2-package /home/merc/.npm/resthttperrors/0.0.2/package
50 silly shasum updated bytes 1926
51 info shasum 654897601b4ef4be8c5e1a7f30291ddfe4104673
51 info shasum /home/merc/.npm/resthttperrors/0.0.2/package.tgz
52 verbose from cache /home/merc/.npm/resthttperrors/0.0.2/package/package.json
53 verbose chmod /home/merc/.npm/resthttperrors/0.0.2/package.tgz 666
54 verbose chown /home/merc/.npm/resthttperrors/0.0.2/package.tgz [ 1000, 1000 ]
55 silly lockFile 3a52ce78- .
56 silly publish { name: 'resthttperrors',
56 silly publish   description: 'A module with a bunch of pre-defined HTTP errors',
56 silly publish   keywords: [ 'javascript', 'http', 'errors' ],
56 silly publish   main: 'HTTPErrors.js',
56 silly publish   version: '0.0.2',
56 silly publish   private: false,
56 silly publish   repository:
56 silly publish    { type: 'git',
56 silly publish      url: 'git://github.com/mercmobily/HTTPErrors.git' },
56 silly publish   author: { name: 'Tony Mobily' },
56 silly publish   dependencies: {},
56 silly publish   readme: 'HTTPErrors\n==========\n\nThis is a simple bunch of HTTP errors, which include handy properties to know what they are and what their status code should be.\n\n## BadRequestError (400)\n\nThis error is triggered when the URL has a problem. In web applications, this is often triggered when the ID of a resource in an URL is not in the right format. This is why its constructor has errorFields, as well as the message:\n\n    e[\'BadRequestError\'] = function( message, errorFields ){\n      this.httpError = 400;\n      this.message = message || \'Bad request\';\n      this.name = \'BadRequestError\';\n      this.errorFields = errorFields;\n    }\n    util.inherits(e[\'BadRequestError\'], Error);\n\n## UnauthorizedError (401)\n\nThis error is used when a user needs to login in order to access a resource. Nothing fancy here:\n\n    e[\'UnauthorizedError\'] = function( message ){\n      this.httpError = 401;\n      this.message = message || \'Login necessary to access the requested resource\';\n      this.name = \'UnauthorizedError\';\n    }\nutil.inherits(e[\'UnauthorizedError\'], Error);\n\n## ForbiddenError (403)\n\nThis error is used when even though a user may be logged in, they might not have the right permissions to access a specific resource. Nothing fancy here:\n\n    e[\'ForbiddenError\'] = function( message ){\n      this.httpError = 403;\n      this.message = message || \'Access to resource denied\';\n      this.name = \'ForbiddenError\';\n    }\nutil.inherits(e[\'ForbiddenError\'], Error);\n\n## NotFoundError (404)\n\nWe all know this one. One of the few errors for which even non-developers know its code...\n\ne[\'NotFoundError\'] = function( message ){\n  this.httpError = 404;\n  this.message = message || \'Resource not found\';\n  this.name = \'NotFoundError\';\n}\nutil.inherits(e[\'NotFoundError\'], Error);\n \n\n## PreconditionFailedError (404)\n\nThis error is triggered when a precondition is not met. For example, the user has sent the header `if-match: *` and has requested a PUT on a resource that doesn\'t exist. Nothing fancy:\n\n    e[\'PreconditionFailedError\'] = function( message ){\n      this.httpError = 412;\n      this.message = message || \'Precondition failed\';\n      this.name = \'PreconditionFailedError\';\n    }\n    util.inherits(e[\'PreconditionFailedError\'], Error);\n\n## ValidationError (422)\n\nA very common error. It happens when a field in an online form has a field that doesn\'t pass validation. The constructor has the message, as well as a second field `errorFields` which is an object in the format `{ field: "Error message", anotherField: "Another error message" }`. The server, when this error happens, is meant to send something back to the client probably highlighting the affected fields with the message\n\n    e[\'ValidationError\'] = function( message, errorFields ){\n      this.httpError = 422;\n      this.message = message || \'Validation problem\';\n      this.name = \'ValidationError\';\n      this.errorFields = errorFields;\n    }\n    util.inherits(e[\'ValidationError\'], Error);\n\n## NotImplementedError (501)\n\nAn error when a client asks to PUT when they shouldn\'t be. Nothing fancy here.\n\n    e[\'NotImplementedError\'] = function( message ){\n      this.httpError = 501;\n      this.message = message || "Method not implemented";\n      this.name = \'NotImplementedError\';\n    }\n    util.inherits(e[\'NotImplementedError\'], Error);\n\n\n## ServiceUnavailableError (503)\n\nAnother error often known to lay people. When an application bombs, this is what should be triggered. The database server connection might have failed, or a database lookup that _ought to_ have worked failed. The "trick" is to 1) Create a new ServiceUnavailableError 2) Create the ServiceUnavailableError passing it a not-so-scary message and the `originalError` to it 3) Give the user a not-so-scary message 4) Log the original error in the application, so that you can see what _actually_ happened. Here\'s the code:\n\n    e[\'ServiceUnavailableError\'] = function( message, originalError ){\n      this.httpError = 503;\n      this.message = message || "Service unavailable";\n      this.name = \'ServiceUnavailable\';\n      this.originalError = originalError;\n    }\n    util.inherits(e[\'ServiceUnavailable\'], Error);\n\n\n',
56 silly publish   _id: 'resthttperrors@0.0.2',
56 silly publish   dist: { shasum: '654897601b4ef4be8c5e1a7f30291ddfe4104673' } }
57 verbose url raw resthttperrors
58 verbose url resolving [ 'https://registry.npmjs.org/', './resthttperrors' ]
59 verbose url resolved https://registry.npmjs.org/resthttperrors
60 info retry registry request attempt 1 at 12:57:19
61 http PUT https://registry.npmjs.org/resthttperrors
62 http 409 https://registry.npmjs.org/resthttperrors
63 verbose url raw resthttperrors
64 verbose url resolving [ 'https://registry.npmjs.org/', './resthttperrors' ]
65 verbose url resolved https://registry.npmjs.org/resthttperrors
66 info retry registry request attempt 1 at 12:57:21
67 http GET https://registry.npmjs.org/resthttperrors
68 http 200 https://registry.npmjs.org/resthttperrors
69 error publish fail Cannot publish over existing version.
69 error publish fail Bump the 'version' field, set the --force flag, or
69 error publish fail     npm unpublish 'resthttperrors@0.0.2'
69 error publish fail and try again
70 error System Linux 3.5.0-23-generic
71 error command "node" "/usr/local/bin/npm" "publish"
72 error cwd /home/merc/Synced/Development/Bookings/libs/server/node_modules/resthttperrors
73 error node -v v0.8.2
74 error npm -v 1.1.59
75 error code EPUBLISHCONFLICT
76 verbose exit [ 1, true ]
